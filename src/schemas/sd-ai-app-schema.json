{
    "$id": "https://github.com/ganrad/rapid/schemas/sd-ai-app-schema.json",
    "$comment": "ID03242025: ganrad: v2.4.0: Added new enum to AI App Type and 'id' attribute to endpoints array. ID04302025: ganrad: v2.3.5: Added new 'affinity' attribute to memorySettings. ID05092025: ganrad: v2.3.6: Added endpoint 'healthPolicy' attributes. ID05142025: ganrad: v2.3.8: Added attributes to support personalization feature. ID08052025: ganrad: v2.4.0: Added new routers - PayloadSwitch, HeaderSwitch, ModelAware * TokenAware",
    "title": "SingleDomainAiApp",
    "description": "A single domain AI Application",
    "type": "object",
    "properties": {
        "appId": {
            "description": "Unique AI Application ID",
            "type": "string",
            "unique": true
        },
        "name": {
            "description": "Short description of AI Application (for display)",
            "type": "string"
        },
        "description": {
            "description": "AI Application description",
            "type": "string"
        },
        "appType": {
            "description": "Type of AI Application",
            "type": "string",
            "enum": [
                "azure_language",
                "azure_translator",
                "azure_content_safety",
                "azure_search",
                "azure_oai",
                "azure_aimodel_inf",
                "azure_ai_agent"
            ]
        },
        "isActive": {
            "description": "Is this AI Application active?",
            "type": "boolean"
        },
        "normalizeOutput": {
            "description": "Normalize LLM output schema to OpenAI output/response schema",
            "type": "boolean"
        },
        "searchAiApp": {
            "description": "Name of the AI Search Application",
            "type": "string"
        },
        "cacheSettings": {
            "description": "Cache settings for an AI Application",
            "type": "object",
            "properties": {
                "useCache": {
                    "description": "Enable cache for AI Application?",
                    "type": "boolean"
                },
                "searchType": {
                    "description": "Type of algorithm used to match vector entities",
                    "type": "string",
                    "enum": [
                        "CosineSimilarity",
                        "EuclideanDistance"
                    ]
                },
                "searchDistance": {
                    "description": "Search algorithm match rate - 1.0 to 100.0%",
                    "type": "number"
                },
                "searchContent": {
                    "description": "Search content to match in request object",
                    "type": "object",
                    "properties": {
                        "term": {
                            "description": "Search terms - prompt or messages",
                            "type": "string",
                            "enum": [
                                "prompt",
                                "messages"
                            ]
                        },
                        "includeRoles": {
                            "description": "Role values to extract and include in search",
                            "type": "string"
                        }
                    },
                    "required": [
                        "term"
                    ],
                    "additionalProperties": false
                },
                "entryExpiry": {
                    "description": "Time interval used to invalidate/evict cached entries",
                    "type": "string"
                }
            },
            "required": [
                "useCache"
            ],
            "additionalProperties": false
        },
        "memorySettings": {
            "description": "Memory settings for an AI Application",
            "type": "object",
            "properties": {
                "useMemory": {
                    "description": "Enable memory for user sessions/threads?",
                    "type": "boolean"
                },
                "msgCount": {
                    "description": "No. of messages to save in memory for a given user session",
                    "type": "integer",
                    "exclusiveMinimum": 0
                },
                "entryExpiry": {
                    "description": "Time interval used to invalidate/evict memory entries",
                    "type": "string"
                },
                "affinity": {
                    "description": "Enable thread affinity for backend API calls?",
                    "type": "boolean"
                }
            },
            "required": [
                "useMemory"
            ],
            "additionalProperties": false
        },
        "personalizationSettings": {
            "description": "Long term memory settings for an AI Application",
            "type": "object",
            "properties": {
                "userMemory": {
                    "description": "Flag to enable or disable long term user memory",
                    "type": "boolean"
                },
                "memoryType": {
                    "description": "Is the memory associated with a User or a User Group?",
                    "type": "string",
                    "enum": [
                        "User",
                        "Group"
                    ]
                },
                "userFactsAppName": {
                    "description": "AI App Name used to identify and extract user / group facts",
                    "type": "string"
                },
                "separatorChar": {
                    "description": "Character used as separator for User and Group.  Eg., username-groupname ~ hyphen is the separator",
                    "type": "string"
                },
                "searchType": {
                    "description": "Type of algorithm used to extract facts from the vector store",
                    "type": "string",
                    "enum": [
                        "CosineSimilarity",
                        "EuclideanDistance"
                    ]
                },
                "memoryConfig": {
                    "description": "Long term user memory configuration",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "names": {
                                "description": "Unique IDs of Groups",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "minItems": 1,
                                "uniqueItems": true
                            },
                            "extractRoleValues": {
                                "description": "Message role values to be used for extracting user facts",
                                "type": "string",
                                "enum": [
                                    "UserAssistant",
                                    "User",
                                    "Assistant"
                                ]
                            },
                            "extractionPrompt": {
                                "description": "Prompt used to extract personal attributes",
                                "type": "string"
                            },
                            "followupPrompt": {
                                "description": "Prompt used for asking followup questions based on model response",
                                "type": "string"
                            },
                            "generateFollowupMsgs": {
                                "description": "Generate followup messages?",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "extractRoleValues"
                        ],
                        "additionalProperties": false
                    },
                    "minItems": 1
                }
            },
            "required": [
                "userMemory"
            ],
            "additionalProperties": false
        },
        "budgetSettings": {
            "description": "Budget settings for an AI Application",
            "type": "object",
            "properties": {
                "useBudget": {
                    "description": "Enable cost tracking for this AI Application?",
                    "type": "boolean"
                },
                "budgetName": {
                    "description": "Name/ID of the budget",
                    "type": "string"
                }
            },
            "required": [
                "useBudget"
            ],
            "additionalProperties": false
        },
        "mcpServerSettings": {
            "description": "MCP Servers associated with an AI Application",
            "type": "object",
            "properties": {
                "serverIds": {
                    "description": "List of MCP server identities",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "minItems": 1,
                    "uniqueItems": true
                },
                "aiAppName": {
                    "description": "AI Application used by the planner",
                    "type": "string"
                },
                "plannerPrompt": {
                    "description": "Prompt to be used by the planner",
                    "type": "string"
                },
                "plannerMaxTokens": {
                    "description": "Max tokens to be generated by the planner",
                    "type": "integer"
                },
                "maxToolsPerQuery": {
                    "description": "Max tools that can be invoked per user query",
                    "type": "integer"
                }
            },
            "required": [
                "serverIds"
            ],
            "additionalProperties": false
        },
        "endpointRouterType": {
            "description": "Type of backend endpoint router",
            "type": "string",
            "enum": [
                "Priority",
                "LeastActiveConnections",
                "LeastRecentlyUsed",
                "WeightedRandom",
                "LatencyWeighted",
                "PayloadSwitch",
                "HeaderSwitch",
                "ModelAware",
                "TokenAware",
                "TimeAware",
                "BudgetAware",
                "AdaptiveBudgetAware",
                "FeedbackWeightedRandom"
            ],
            "minLength": 1
        },
        "adaptiveRouterSettings": {
            "description": "Router settings when 'Adaptive' endpoint router type is used",
            "type": "object",
            "properties": {
                "strategy": {
                    "description": "Routing strategy",
                    "type": "string",
                    "enum": [
                        "Priority",
                        "WeightedRandom",
                        "RoundRobin",
                        "LeastSpent",
                        "Adaptive"
                    ],
                    "minLength": 1
                },
                "windowType": {
                    "description": "Window type to use when making budget based routing decisions",
                    "type": "string",
                    "enum": [
                        "Hourly",
                        "Daily",
                        "Weekly",
                        "Monthly"
                    ],
                    "minLength": 1
                }
            }
        },
        "endpoints": {
            "description": "Endpoint settings for an AI Application",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "rpm": {
                        "description": "Rate limit in requests per minute (RPM) for this endpoint",
                        "type": "integer",
                        "exclusiveMinimum": 0
                    },
                    "uri": {
                        "description": "AI Service endpoint URI",
                        "type": "string",
                        "minLength": 1
                    },
                    "apikey": {
                        "description": "AI Service API Key",
                        "type": "string",
                        "minLength": 1
                    },
                    "id": {
                        "description": "Endpoint / Assistant ID",
                        "type": "string",
                        "minLength": 1
                    },
                    "model": {
                        "description": "Model ID",
                        "type": "string",
                        "enum": [
                            "gpt-3.5",
                            "gpt-4",
                            "gpt-4o",
                            "gpt-4.1",
                            "gpt-5",
                            "o1",
                            "o3",
                            "o4"
                        ],
                        "minLength": 1
                    },
                    "weight": {
                        "description": "Weight assigned to this endpoint. Used when weighted routing of endpoints is configured for this AI App.",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 100
                    },
                    "payloadThreshold": {
                        "description": "Request payload size (bytes/tokens) threshold. Used when payload size based routing of endpoints is configured for this AI App.",
                        "type": "string",
                        "minLength": 1
                    },
                    "task": {
                        "description": "A JSON array listing specific task-related terms such as summarization, advanced reasoning, or cost-efficiency, that indicate the model's specialization as defined by the endpoint. Used when model aware routing is configured for an AI App.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    "days": {
                        "description": "A JSON array listing the week days in numbers (Sunday = 0 & Saturday = 6).  Backend calls will be routed to this endpoint only during the listed days.",
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "enum": [
                                0,
                                1,
                                2,
                                3,
                                4,
                                5,
                                6
                            ]
                        },
                        "minItems": 1,
                        "maxItems": 7,
                        "uniqueItems": true
                    },
                    "startHour": {
                        "description": "Backend calls will be routed to this endpoint when the current hour is greater than or equal to this value.",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 24
                    },
                    "endHour": {
                        "description": "Backend calls will be routed to this endpoint until the current hour is less than this value.",
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 24
                    },
                    "budget": {
                        "description": "The budget used for tracking LLM API costs and optionally routing requests",
                        "type": "object",
                        "properties": {
                            "defaultEndpoint": {
                                "description": "Default model endpoint for spillover traffic when all endpoints have crossed the cost threshold",
                                "type": "boolean"
                            },
                            "modelName": {
                                "description": "Unique Name/ID of the model",
                                "type": "string",
                                "minLength": 1
                            },
                            "costBudgets": {
                                "description": "The threshold amount specified in dollars",
                                "type": "object",
                                "properties": {
                                    "hourly": {
                                        "description": "Hourly cost budget",
                                        "type": "number",
                                        "exclusiveMinimum": 0
                                    },
                                    "daily": {
                                        "description": "Daily cost budget",
                                        "type": "number",
                                        "exclusiveMinimum": 0
                                    },
                                    "weekly": {
                                        "description": "Weekly cost budget",
                                        "type": "number",
                                        "exclusiveMinimum": 0
                                    },
                                    "monthly": {
                                        "description": "Monthly cost budget",
                                        "type": "number",
                                        "exclusiveMinimum": 0
                                    }
                                },
                                "required": [
                                    "hourly",
                                    "daily",
                                    "weekly",
                                    "monthly"
                                ],
                                "additionalProperties": false
                            }
                        },
                        "required": [
                            "modelName"
                        ],
                        "additionalProperties": false
                    },
                    "qualityTier": {
                        "description": "Quality tier (A, B or C) is required when 'Adaptive' endpoing routing alg. and 'Adaptive' strategy is used",
                        "type": "string",
                        "enum": [
                            "A",
                            "B",
                            "C"
                        ],
                        "minLength": 1
                    },
                    "healthPolicy": {
                        "description": "Describes the health policy to apply when endpoint response time exceeds a set threshold",
                        "type": "object",
                        "properties": {
                            "maxCallsBeforeUnhealthy": {
                                "description": "Max. API calls with delayed response",
                                "type": "integer",
                                "exclusiveMinimum": 0
                            },
                            "latencyThresholdSeconds": {
                                "description": "Endpoint response time threshold in seconds",
                                "type": "integer",
                                "exclusiveMinimum": 19
                            },
                            "retryAfterMinutes": {
                                "description": "Time in minutes when this endpoint will remain marked as unhealthy",
                                "type": "integer",
                                "exclusiveMinimum": 4
                            }
                        },
                        "required": [
                            "latencyThresholdSeconds",
                            "retryAfterMinutes"
                        ],
                        "additionalProperties": false
                    }
                },
                "required": [
                    "uri",
                    "apikey"
                ],
                "additionalProperties": false
            },
            "minItems": 1
        }
    },
    "required": [
        "appId",
        "appType",
        "isActive",
        "cacheSettings",
        "memorySettings",
        "endpoints"
    ],
    "additionalProperties": false
}